{"version":3,"sources":["components/header/index.js","containers/teams/actionTypes.js","containers/teams/actions.js","containers/teams/selectors.js","containers/teams/list.js","containers/teams/index.js","containers/teams/item/index.js","containers/teams/item/playerForm.js","containers/teams/item/player.js","App.js","serviceWorker.js","history.js","containers/teams/reducer.js","store/reducers/index.js","containers/teams/model.js","containers/teams/sagas.js","store/index.js","index.js"],"names":["Header","classes","this","props","react_default","a","createElement","className","root","AppBar_default","position","color","elevation","Toolbar_default","toolbar","IconButton_default","menuButton","aria-label","Menu_default","Typography_default","variant","align","logo","Component","withStyles","flexGrow","backgroundRepeat","backgroundSize","marginLeft","marginRight","borderBottom","paddingTop","paddingBottom","GET_TEAM_LIST","GET_TEAM_LIST_SUCCESS","GET_TEAM_LIST_FAIL","GET_TEAM_ITEM","GET_TEAM_ITEM_SUCCESS","GET_TEAM_ITEM_FAIL","GET_PLAYER_ITEM","GET_PLAYER_ITEM_SUCCESS","GET_PLAYER_ITEM_FAIL","savePlayerItem","teamId","playerIndex","playerDetails","type","payload","teamListSelector","state","teams","filteredTeamList","createSelector","filteredList","length","list","chosenTeamItem","chosenPlayerItem","TeamList","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","getTeamList","listForDisplay","error","_","isEmpty","loading","react","GridList_default","id","cellHeight","cols","spacing","map","team","GridListTile_default","key","component","Link","to","concat","GridListTileBar_default","title","fullName","connect","searched","teamList","Teams","Grid_default","item","xs","teams_list","TeamItem","getTeamItem","match","params","_this2","itemForDisplay","roster","player","person","displayName","unit","subtitle","depthOrder","PlayerForm","_this$props","teamItem","playerItem","formik_esm","initialValues","enableReinitialize","onSubmit","values","actions","findIndex","setSubmitting","history","push","render","_ref","errors","status","touched","isSubmitting","container","md","formik_material_fields_es","name","label","margin","fullWidth","options","value","Button_default","disabled","withRouter","PlayerItem","getPlayerItem","playerName","playerForm","theme","createMuiTheme","typography","useNextVariants","palette","primary","lightBlue","App","styles","header","Switch","Route","path","Redirect","Boolean","window","location","hostname","createBrowserHistory","initialState","rootReducer","combineReducers","arguments","undefined","action","objectSpread","toConsumableArray","teamIndex","index","getList","getItem","getListData","filter","url","axios","get","Promise","resolve","data","response","regenerator_default","wrap","_context","prev","next","sent","put","t0","stop","_marked","_context2","find","orderBy","message","_marked2","teamData","foundPlayer","_context3","_marked3","rootSaga","all","takeLatest","sagas_marked","reduxDevTools","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","sagaMiddleware","createSagaMiddleware","store","createStore","reducers","applyMiddleware","run","ReactDOM","es","Router","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a5e55b7e.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nconst styles = {\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  logo: {\r\n    flexGrow: 1,\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundSize: 'contain',\r\n  },\r\n  menuButton: {\r\n    marginLeft: 16,\r\n    marginRight: 2,\r\n  },\r\n  toolbar: {\r\n    borderBottom: '1px solid #eee',\r\n    paddingTop: 8,\r\n    paddingBottom: 8,\r\n  }\r\n};\r\n\r\nclass Header extends Component {\r\n  static propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div className={classes.root}>\r\n        <AppBar position=\"static\" color=\"inherit\" elevation={0}>\r\n          <Toolbar className={classes.toolbar}>\r\n            <IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"Menu\">\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h5\" color=\"inherit\" align=\"left\" className={classes.logo}>\r\n              React Example App\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Header);\r\n","export const GET_TEAM_LIST = \"GET_TEAM_LIST\";\r\nexport const GET_TEAM_LIST_SUCCESS = \"GET_TEAM_LIST_SUCCESS\";\r\nexport const GET_TEAM_LIST_FAIL = \"GET_TEAM_LIST_FAIL\";\r\nexport const GET_TEAM_ITEM = \"GET_TEAM_ITEM\";\r\nexport const GET_TEAM_ITEM_SUCCESS = \"GET_TEAM_ITEM_SUCCESS\";\r\nexport const GET_TEAM_ITEM_FAIL = \"GET_TEAM_ITEM_FAIL\";\r\nexport const GET_PLAYER_ITEM = \"GET_PLAYER_ITEM\";\r\nexport const GET_PLAYER_ITEM_SUCCESS = \"GET_PLAYER_ITEM_SUCCESS\";\r\nexport const GET_PLAYER_ITEM_FAIL = \"GET_PLAYER_ITEM_FAIL\";\r\nexport const SAVE_PLAYER_ITEM = \"SAVE_PLAYER_ITEM\";\r\n","import {\r\n  GET_TEAM_LIST,\r\n  GET_TEAM_ITEM,\r\n  GET_PLAYER_ITEM,\r\n  SAVE_PLAYER_ITEM,\r\n} from './actionTypes';\r\n\r\nconst getTeamList = (teamList) => {\r\n  return {\r\n      type: GET_TEAM_LIST,\r\n      payload: teamList,\r\n  }\r\n};\r\n\r\nconst getTeamItem = (id, teamList) => {\r\n  return {\r\n    type: GET_TEAM_ITEM,\r\n    payload: {\r\n      id,\r\n      teamList,\r\n    },\r\n  }\r\n};\r\n\r\nconst getPlayerItem = (teamId, teamList, playerName) => {\r\n  return {\r\n    type: GET_PLAYER_ITEM,\r\n    payload: {\r\n      teamId,\r\n      teamList,\r\n      playerName\r\n    },\r\n  }\r\n};\r\n\r\nconst savePlayerItem = (teamId, playerIndex, playerDetails) => {\r\n  return {\r\n    type: SAVE_PLAYER_ITEM,\r\n    payload: {\r\n      teamId,\r\n      playerIndex,\r\n      playerDetails,\r\n    },\r\n  }\r\n};\r\n\r\nexport {\r\n  getTeamList,\r\n  getTeamItem,\r\n  getPlayerItem,\r\n  savePlayerItem,\r\n};","import { createSelector } from 'reselect';\r\n\r\nconst teamListSelector = state => state.teams;\r\n\r\nexport const filteredTeamList = createSelector(\r\n  [teamListSelector],\r\n  (teams) => {\r\n    if (teams.filteredList.length > 0) {\r\n      return teams.filteredList;\r\n    }\r\n\r\n    return teams.list;\r\n  }\r\n);\r\n\r\nexport const chosenTeamItem = createSelector(\r\n  [teamListSelector],\r\n  (teams) => {\r\n    return teams.chosenTeamItem;\r\n  }\r\n);\r\n\r\nexport const chosenPlayerItem = createSelector(\r\n  [teamListSelector],\r\n  (teams) => {\r\n    return teams.chosenPlayerItem;\r\n  }\r\n);\r\n","import React, { Component, Fragment } from 'react';\r\nimport _ from 'lodash';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from \"react-router-dom\";\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { getTeamList } from './actions';\r\nimport { filteredTeamList } from './selectors';\r\nimport './list.scss';\r\n\r\nclass TeamList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    props.getTeamList(props.listForDisplay);\r\n  }\r\n\r\n  render() {\r\n    if (this.props.error) {\r\n      return <p className=\"error\">{this.props.error}</p>\r\n    }\r\n\r\n    if (\r\n      !_.isEmpty(this.props.listForDisplay) &&\r\n      !this.props.loading\r\n    ) {\r\n      return (\r\n        <GridList\r\n          id=\"team-grid\"\r\n          cellHeight={100}\r\n          // TODO: number of columns should be dynamic based on screen width (e.g., 1 if xs or sm)\r\n          cols={3}\r\n          spacing={0}\r\n        >\r\n          {this.props.listForDisplay.map(team => (\r\n            // TODO: move this into a ListTile component\r\n            <GridListTile\r\n              key={team.id}\r\n              component={Link}\r\n              to={`/teams/${team.id}`}\r\n            >\r\n              <GridListTileBar\r\n                title={\r\n                  <Typography variant=\"h6\">\r\n                    <span>{team.fullName}\r\n                    </span>\r\n                  </Typography>\r\n                }\r\n                className=\"team-tile\"\r\n              />\r\n            </GridListTile>\r\n          ))}\r\n        </GridList>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n        Loading...\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({\r\n    listForDisplay: filteredTeamList(state),\r\n    error: state.teams.error,\r\n    loading: state.teams.loading,\r\n    searched: state.teams.searched,\r\n  }),\r\n  { getTeamList }\r\n)(TeamList);\r\n","import React, { Component, Fragment } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TeamList from \"./list\";\r\n\r\nclass Teams extends Component {\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <Grid item xs={12}>\r\n          <TeamList />\r\n        </Grid>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Teams;\r\n","import React, { Component, Fragment } from 'react';\r\nimport _ from 'lodash';\r\nimport { connect } from 'react-redux';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { getTeamItem } from '../actions';\r\nimport { chosenTeamItem } from '../selectors';\r\nimport './index.scss';\r\n\r\nclass TeamItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    props.getTeamItem(props.match.params.id, props.teamList);\r\n  }\r\n\r\n  render() {\r\n    if (this.props.error) {\r\n      return <p className=\"error\">{this.props.error}</p>\r\n    }\r\n\r\n    if (\r\n      !_.isEmpty(this.props.itemForDisplay) &&\r\n      !this.props.loading\r\n    ) {\r\n      return (\r\n        <Fragment>\r\n          <Typography variant=\"h5\" color=\"inherit\">\r\n            {this.props.itemForDisplay.fullName} Roster\r\n          </Typography>\r\n          <Typography variant=\"body1\" color=\"inherit\"\r\n            component={Link}\r\n            to='/teams'>\r\n            Back to teams\r\n          </Typography>\r\n\r\n          <GridList\r\n            id=\"team-grid\"\r\n            cellHeight={100}\r\n            // TODO: number of columns should be dynamic based on screen width (e.g., 1 if xs or sm)\r\n            cols={3}\r\n            spacing={0}\r\n          >\r\n            {this.props.itemForDisplay.roster.map(player => (\r\n              // TODO: move this into a ListTile component\r\n              <GridListTile\r\n                key={player.person.displayName}\r\n                component={Link}\r\n                to={`${this.props.match.params.id}/${player.person.displayName}`}\r\n              >\r\n                <GridListTileBar\r\n                  title={\r\n                    <Typography variant=\"body2\">\r\n                      <span>{player.person.displayName}</span> - <span>{player.unit}</span>\r\n                      <br/>\r\n                      <span>{player.position}</span>\r\n                    </Typography>\r\n                  }\r\n                  subtitle={\r\n                    player.depthOrder === 1 ?\r\n                    <span>Starter</span>\r\n                    :\r\n                    <span>Backup</span>\r\n                  }\r\n                  className=\"player-tile\"\r\n                />\r\n              </GridListTile>\r\n            ))}\r\n          </GridList>\r\n        </Fragment>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n        Loading...\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({\r\n    teamList: state.teams.list,\r\n    itemForDisplay: chosenTeamItem(state),\r\n    error: state.teams.error,\r\n    loading: state.teams.loading,\r\n  }),\r\n  { getTeamItem }\r\n)(TeamItem);\r\n","import React, { Component } from 'react';\r\nimport _ from 'lodash';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { Formik, Form } from 'formik';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { FormikTextField, FormikSelectField  } from 'formik-material-fields';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { savePlayerItem } from '../actions';\r\n\r\nclass PlayerForm extends Component {\r\n  render() {\r\n    const {\r\n      teamItem,\r\n      playerItem,\r\n      teamId,\r\n    } = this.props;\r\n\r\n    return (\r\n      <Formik\r\n        initialValues={playerItem}\r\n        enableReinitialize={true}\r\n        onSubmit={(values, actions) => {\r\n          const playerIndex = _.findIndex(teamItem.roster, {person: {displayName: playerItem.person.displayName}});\r\n          this.props.savePlayerItem(teamId, playerIndex, values);\r\n          actions.setSubmitting(false);\r\n          this.props.history.push(`/teams/${teamId}`);\r\n        }}\r\n        render={({ errors, status, touched, isSubmitting }) => (\r\n          <Form>\r\n            <Grid container spacing={24}>\r\n              <Grid item md={4}>\r\n              </Grid>\r\n              <Grid item md={4}>\r\n                <FormikTextField\r\n                  name=\"person.displayName\"\r\n                  label=\"Display Name\"\r\n                  margin=\"normal\"\r\n                  fullWidth\r\n                  align=\"left\"\r\n                />\r\n                <br />\r\n                <FormikSelectField\r\n                  name=\"unit\"\r\n                  label=\"Unit\"\r\n                  margin=\"normal\"\r\n                  align=\"left\"\r\n                  fullWidth\r\n                  options={[\r\n                    { label: 'Offense', value: 'OFFENSE' },\r\n                    { label: 'Defense', value: 'DEFENSE' },\r\n                  ]}\r\n                />\r\n                <br />\r\n                <FormikSelectField\r\n                  name=\"position\"\r\n                  label=\"Position\"\r\n                  margin=\"normal\"\r\n                  align=\"left\"\r\n                  fullWidth\r\n                  options={[\r\n                    { label: \"Wide Receiver\", value: \"Wide Receiver\" },\r\n                    { label: \"Quarterback\", value: \"Quarterback\" },\r\n                    { label: \"Running Back\", value: \"Running Back\" },\r\n                    { label: \"Weakside Linebacker\", value: \"Weakside Linebacker\" },\r\n                    { label: \"Nose Tackle\", value: \"Nose Tackle\" },\r\n                    { label: \"Strong Safety\", value: \"Strong Safety\" },\r\n                    { label: \"Right Cornerback\", value: \"Right Cornerback\" },\r\n                    { label: \"Left Defensive End\", value: \"Left Defensive End\" },\r\n                    { label: \"Right Defensive End\", value: \"Right Defensive End\" },\r\n                  ]}\r\n                />\r\n                <br />\r\n                <FormikSelectField\r\n                  name=\"depthOrder\"\r\n                  label=\"Depth Order\"\r\n                  margin=\"normal\"\r\n                  align=\"left\"\r\n                  fullWidth\r\n                  options={[\r\n                    { label: 'Starter', value: 1 },\r\n                    { label: 'Backup', value: 2 },\r\n                  ]}\r\n                />\r\n                <br />\r\n                <Button\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  disabled={isSubmitting}\r\n                >\r\n                  Submit\r\n                </Button>\r\n                &nbsp;\r\n                <Button\r\n                  type=\"button\"\r\n                  variant=\"contained\"\r\n                  color=\"default\"\r\n                  component={Link}\r\n                  to={`/teams/${teamId}`}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n              </Grid>\r\n              <Grid item md={4}>\r\n              </Grid>\r\n            </Grid>\r\n          </Form>\r\n        )}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(\r\n  null,\r\n  { savePlayerItem }\r\n)(PlayerForm));\r\n","import React, { Component, Fragment } from 'react';\r\nimport _ from 'lodash';\r\nimport { connect } from 'react-redux';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { getPlayerItem, savePlayerItem } from '../actions';\r\nimport { chosenPlayerItem, chosenTeamItem } from '../selectors';\r\nimport PlayerForm from './playerForm';\r\nimport './index.scss';\r\n\r\nclass PlayerItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    props.getPlayerItem(props.match.params.id, props.teamList, props.match.params.playerName);\r\n  }\r\n\r\n  render() {\r\n    if (this.props.error) {\r\n      return <p className=\"error\">{this.props.error}</p>\r\n    }\r\n\r\n    if (\r\n      !_.isEmpty(this.props.itemForDisplay) &&\r\n      !this.props.loading\r\n    ) {\r\n      return (\r\n        <Fragment>\r\n          <Typography variant=\"h5\" color=\"inherit\">\r\n            Edit {this.props.itemForDisplay.person.displayName}\r\n          </Typography>\r\n          <Typography variant=\"body1\" color=\"inherit\"\r\n            component={Link}\r\n            to={`/teams/${this.props.match.params.id}`}>\r\n            Back to team\r\n          </Typography>\r\n\r\n          <PlayerForm\r\n            teamItem={this.props.teamItem}\r\n            playerItem={this.props.itemForDisplay}\r\n            teamId={this.props.match.params.id}\r\n          />\r\n\r\n        </Fragment>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n        Loading...\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({\r\n    teamList: state.teams.list,\r\n    teamItem: chosenTeamItem(state),\r\n    itemForDisplay: chosenPlayerItem(state),\r\n  }),\r\n  { getPlayerItem, savePlayerItem }\r\n)(PlayerItem);\r\n","import React, { Component } from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport lightBlue from '@material-ui/core/colors/lightBlue';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport './App.scss';\r\nimport Header from './components/header';\r\nimport TeamList from './containers/teams';\r\nimport TeamItem from './containers/teams/item';\r\nimport PlayerItem from './containers/teams/item/player';\r\n\r\nconst theme = createMuiTheme({\r\n  typography: {\r\n    useNextVariants: true,\r\n  },\r\n  palette: {\r\n    primary: lightBlue,\r\n  },\r\n});\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <MuiThemeProvider theme={theme}>\r\n        <div className=\"App\">\r\n          <Header className=\"App-header\"></Header>\r\n          <div className=\"Main\">\r\n            <Grid container spacing={0}>\r\n              <Grid item xs={12}>\r\n                <Switch>\r\n                  <Route path=\"/teams/:id/:playerName\" component={PlayerItem} />\r\n                  <Route path=\"/teams/:id\" component={TeamItem} />\r\n                  <Route path=\"/teams\" component={TeamList} />\r\n                  <Redirect to=\"/teams\" />\r\n                </Switch>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n        </div>\r\n      </MuiThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { createBrowserHistory } from 'history';\r\n\r\nexport default createBrowserHistory();\r\n","import _ from 'lodash';\r\n\r\nimport {\r\n  GET_TEAM_LIST,\r\n  GET_TEAM_LIST_SUCCESS,\r\n  GET_TEAM_LIST_FAIL,\r\n  GET_TEAM_ITEM,\r\n  GET_TEAM_ITEM_SUCCESS,\r\n  GET_TEAM_ITEM_FAIL,\r\n  GET_PLAYER_ITEM,\r\n  GET_PLAYER_ITEM_SUCCESS,\r\n  GET_PLAYER_ITEM_FAIL,\r\n  SAVE_PLAYER_ITEM,\r\n} from './actionTypes';\r\n\r\nconst list = [];\r\n\r\nconst initialState = {\r\n  list,\r\n  loading: false,\r\n  error: '',\r\n  filteredList: list,\r\n  chosenTeamItem: {},\r\n  chosenPlayerItem: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_TEAM_LIST:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    case GET_TEAM_LIST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        list: [ ...action.payload ],\r\n        loading: false,\r\n        error: '',\r\n      };\r\n    case GET_TEAM_LIST_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload\r\n      };\r\n    \r\n    case GET_TEAM_ITEM:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    case GET_TEAM_ITEM_SUCCESS:\r\n      return {\r\n        ...state,\r\n        chosenTeamItem: action.payload,\r\n        loading: false,\r\n        error: '',\r\n      };\r\n    case GET_TEAM_ITEM_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload\r\n      };\r\n\r\n    case GET_PLAYER_ITEM:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    case GET_PLAYER_ITEM_SUCCESS:\r\n      return {\r\n        ...state,\r\n        chosenPlayerItem: action.payload,\r\n        loading: false,\r\n        error: '',\r\n      };\r\n    case GET_PLAYER_ITEM_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload\r\n      };\r\n    case SAVE_PLAYER_ITEM:\r\n      // TODO: handle scenario when user initially enters app at the edit player level (eg. via a bookmark)\r\n      if (state.list.length > 0) {\r\n        const teamIndex = _.findIndex(state.list, {id: action.payload.teamId});\r\n        return {\r\n          ...state,\r\n          loading: false,\r\n          error: '',\r\n          list: state.list.map((team, index) => {\r\n            if (index !== teamIndex) {\r\n              return team;\r\n            }\r\n\r\n            return {\r\n              ...team,\r\n              roster: team.roster.map((player, playerIndex) => {\r\n                if (playerIndex !== action.payload.playerIndex) {\r\n                  return player;\r\n                }\r\n\r\n                return {\r\n                  ...player,\r\n                  ...action.payload.playerDetails,\r\n                };\r\n              })\r\n            };\r\n          })\r\n        }\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        playerDetails: action.payload.playerDetails,\r\n        loading: false,\r\n        error: '',\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport teams from \"../../containers/teams/reducer.js\";\r\n\r\nconst rootReducer = combineReducers({\r\n  teams,\r\n});\r\n\r\nexport default rootReducer;","import { put, call } from 'redux-saga/effects';\r\nimport axios from 'axios';\r\nimport _ from 'lodash';\r\n\r\nimport {\r\n  GET_TEAM_LIST_SUCCESS,\r\n  GET_TEAM_LIST_FAIL,\r\n  GET_TEAM_ITEM_SUCCESS,\r\n  GET_TEAM_ITEM_FAIL,\r\n  GET_PLAYER_ITEM_SUCCESS,\r\n  GET_PLAYER_ITEM_FAIL,\r\n} from './actionTypes';\r\n\r\nconst apiUrl = 'http://localhost:3000/api/';\r\n\r\nconst getListData = (teamList, filter) => {\r\n  let url = `${apiUrl}data.json`;\r\n\r\n  if (filter) {\r\n    url = `${url}?filter=${filter}`;\r\n  }\r\n\r\n  // fetch team list data only if it's not already in the store\r\n  if (teamList.length === 0) {\r\n    return axios.get(\r\n      url,\r\n    );\r\n  }\r\n\r\n  return new Promise((resolve) => {\r\n    return resolve({\r\n      data: {\r\n        teams: teamList\r\n      }\r\n    });\r\n  });\r\n};\r\n\r\nexport function* getList(data) {\r\n  try {\r\n    const response = yield call(getListData, data.payload);\r\n\r\n    if (response.data.teams.length) {\r\n      yield put({ type: GET_TEAM_LIST_SUCCESS, payload: response.data.teams });\r\n    }\r\n  } catch (e) {\r\n    yield put({ type: GET_TEAM_LIST_FAIL, payload: e });\r\n  }\r\n};\r\n\r\nexport function* getItem(data) {\r\n  try {\r\n    const response = yield call(getListData, data.payload.teamList, data.payload.id);\r\n\r\n    if (response.data.teams.length) {\r\n      const chosenTeamItem = _.find(response.data.teams, {id: data.payload.id});\r\n      // Sort players by position then depthOrder\r\n      chosenTeamItem.roster = _.orderBy(chosenTeamItem.roster, ['position', 'depthOrder'], ['asc', 'asc']);\r\n      yield put({ type: GET_TEAM_ITEM_SUCCESS, payload: chosenTeamItem });\r\n    }\r\n  } catch(e) {\r\n    yield put({ type: GET_TEAM_ITEM_FAIL, payload: e.message });\r\n  }\r\n};\r\n\r\nexport function* getPlayerItem(data) {\r\n  try {\r\n    const response = yield call(getListData, data.payload.teamList, `${data.payload.teamId}&playerName=${data.payload.playerName}`);\r\n\r\n    if (response.data.teams.length) {\r\n      const teamData = _.find(data.payload.teamList, {id: data.payload.teamId});\r\n      const foundPlayer = _.find(teamData.roster, {person: {displayName: data.payload.playerName}});\r\n      yield put({ type: GET_PLAYER_ITEM_SUCCESS, payload: foundPlayer });\r\n    }\r\n  } catch(e) {\r\n    yield put({ type: GET_PLAYER_ITEM_FAIL, payload: e.message });\r\n  }\r\n};\r\n","import { all, takeLatest } from \"redux-saga/effects\";\r\n\r\nimport {\r\n    GET_TEAM_LIST,\r\n    GET_TEAM_ITEM,\r\n    GET_PLAYER_ITEM,\r\n} from \"./actionTypes\";\r\n\r\nimport {\r\n    getList,\r\n    getItem,\r\n    getPlayerItem,\r\n} from \"./model\";\r\n\r\nexport default function* rootSaga() {\r\n    yield all([\r\n        takeLatest(GET_TEAM_LIST, getList),\r\n        takeLatest(GET_TEAM_ITEM, getItem),\r\n        takeLatest(GET_PLAYER_ITEM, getPlayerItem),\r\n    ]);\r\n};\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport reducers from \"./reducers\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\n\r\nimport rootSaga from '../containers/teams/sagas';\r\n\r\nconst reduxDevTools =\r\n  // eslint-disable-next-line\r\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__() || compose;\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nlet store = createStore(\r\n  reducers,\r\n  compose(applyMiddleware(sagaMiddleware), reduxDevTools)\r\n);\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Router, Route } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport history from './history';\r\nimport store from './store';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Router history={history}>\r\n      <Route path=\"/\" component={App} />\r\n    </Router>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}