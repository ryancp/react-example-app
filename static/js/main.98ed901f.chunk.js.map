{"version":3,"sources":["components/header/index.js","containers/teams/actionTypes.js","containers/teams/actions.js","containers/teams/selectors.js","containers/teams/list.js","containers/teams/index.js","containers/teams/item/index.js","containers/teams/item/playerForm.js","containers/teams/item/player.js","App.js","serviceWorker.js","history.js","containers/teams/reducer.js","store/reducers/index.js","containers/teams/model.js","containers/teams/sagas.js","store/index.js","index.js"],"names":["Header","classes","this","props","react_default","a","createElement","className","root","AppBar_default","position","color","elevation","Toolbar_default","toolbar","IconButton_default","menuButton","aria-label","Menu_default","Typography_default","variant","align","logo","Component","withStyles","flexGrow","backgroundRepeat","backgroundSize","marginLeft","marginRight","borderBottom","paddingTop","paddingBottom","GET_TEAM_LIST","GET_TEAM_LIST_SUCCESS","GET_TEAM_LIST_FAIL","GET_TEAM_ITEM","GET_TEAM_ITEM_SUCCESS","GET_TEAM_ITEM_FAIL","GET_PLAYER_ITEM","GET_PLAYER_ITEM_SUCCESS","GET_PLAYER_ITEM_FAIL","savePlayerItem","teamId","playerIndex","playerDetails","type","payload","teamListSelector","state","teams","filteredTeamList","createSelector","filteredList","length","list","chosenTeamItem","chosenPlayerItem","TeamList","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","getTeamList","listForDisplay","error","_","isEmpty","loading","react","GridList_default","id","cellHeight","cols","spacing","map","team","GridListTile_default","key","component","Link","to","concat","GridListTileBar_default","title","fullName","connect","searched","teamList","Teams","Grid_default","item","xs","teams_list","TeamItem","getTeamItem","match","params","_this2","itemForDisplay","roster","player","person","displayName","unit","subtitle","depthOrder","PlayerForm","_this$props","teamItem","playerItem","formik_esm","initialValues","enableReinitialize","onSubmit","values","actions","findIndex","setSubmitting","history","push","render","_ref","errors","status","touched","isSubmitting","container","md","formik_material_fields_es","name","label","margin","fullWidth","options","value","Button_default","disabled","withRouter","PlayerItem","getPlayerItem","playerName","playerForm","theme","createMuiTheme","typography","useNextVariants","palette","primary","lightBlue","App","styles","header","Switch","Route","path","Redirect","Boolean","window","location","hostname","createBrowserHistory","initialState","rootReducer","combineReducers","arguments","undefined","action","objectSpread","toConsumableArray","teamIndex","index","getList","getItem","getListData","filter","url","axios","get","Promise","resolve","data","response","regenerator_default","wrap","_context","prev","next","sent","put","t0","stop","_marked","_context2","find","orderBy","message","_marked2","teamData","foundPlayer","_context3","_marked3","rootSaga","all","takeLatest","sagas_marked","reduxDevTools","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","sagaMiddleware","createSagaMiddleware","store","createStore","reducers","applyMiddleware","run","ReactDOM","es","Router","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.98ed901f.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nconst styles = {\n  root: {\n    flexGrow: 1,\n  },\n  logo: {\n    flexGrow: 1,\n    backgroundRepeat: 'no-repeat',\n    backgroundSize: 'contain',\n  },\n  menuButton: {\n    marginLeft: 16,\n    marginRight: 2,\n  },\n  toolbar: {\n    borderBottom: '1px solid #eee',\n    paddingTop: 8,\n    paddingBottom: 8,\n  }\n};\n\nclass Header extends Component {\n  static propTypes = {\n    classes: PropTypes.object.isRequired,\n  };\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className={classes.root}>\n        <AppBar position=\"static\" color=\"inherit\" elevation={0}>\n          <Toolbar className={classes.toolbar}>\n            <IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"Menu\">\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h5\" color=\"inherit\" align=\"left\" className={classes.logo}>\n              React Example App\n            </Typography>\n          </Toolbar>\n        </AppBar>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(Header);\n","export const GET_TEAM_LIST = \"GET_TEAM_LIST\";\nexport const GET_TEAM_LIST_SUCCESS = \"GET_TEAM_LIST_SUCCESS\";\nexport const GET_TEAM_LIST_FAIL = \"GET_TEAM_LIST_FAIL\";\nexport const GET_TEAM_ITEM = \"GET_TEAM_ITEM\";\nexport const GET_TEAM_ITEM_SUCCESS = \"GET_TEAM_ITEM_SUCCESS\";\nexport const GET_TEAM_ITEM_FAIL = \"GET_TEAM_ITEM_FAIL\";\nexport const GET_PLAYER_ITEM = \"GET_PLAYER_ITEM\";\nexport const GET_PLAYER_ITEM_SUCCESS = \"GET_PLAYER_ITEM_SUCCESS\";\nexport const GET_PLAYER_ITEM_FAIL = \"GET_PLAYER_ITEM_FAIL\";\nexport const SAVE_PLAYER_ITEM = \"SAVE_PLAYER_ITEM\";\n","import {\n  GET_TEAM_LIST,\n  GET_TEAM_ITEM,\n  GET_PLAYER_ITEM,\n  SAVE_PLAYER_ITEM,\n} from './actionTypes';\n\nconst getTeamList = (teamList) => {\n  return {\n      type: GET_TEAM_LIST,\n      payload: teamList,\n  }\n};\n\nconst getTeamItem = (id, teamList) => {\n  return {\n    type: GET_TEAM_ITEM,\n    payload: {\n      id,\n      teamList,\n    },\n  }\n};\n\nconst getPlayerItem = (teamId, teamList, playerName) => {\n  return {\n    type: GET_PLAYER_ITEM,\n    payload: {\n      teamId,\n      teamList,\n      playerName\n    },\n  }\n};\n\nconst savePlayerItem = (teamId, playerIndex, playerDetails) => {\n  return {\n    type: SAVE_PLAYER_ITEM,\n    payload: {\n      teamId,\n      playerIndex,\n      playerDetails,\n    },\n  }\n};\n\nexport {\n  getTeamList,\n  getTeamItem,\n  getPlayerItem,\n  savePlayerItem,\n};","import { createSelector } from 'reselect';\n\nconst teamListSelector = state => state.teams;\n\nexport const filteredTeamList = createSelector(\n  [teamListSelector],\n  (teams) => {\n    if (teams.filteredList.length > 0) {\n      return teams.filteredList;\n    }\n\n    return teams.list;\n  }\n);\n\nexport const chosenTeamItem = createSelector(\n  [teamListSelector],\n  (teams) => {\n    return teams.chosenTeamItem;\n  }\n);\n\nexport const chosenPlayerItem = createSelector(\n  [teamListSelector],\n  (teams) => {\n    return teams.chosenPlayerItem;\n  }\n);\n","import React, { Component, Fragment } from 'react';\nimport _ from 'lodash';\nimport { connect } from 'react-redux';\nimport { Link } from \"react-router-dom\";\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport Typography from '@material-ui/core/Typography';\n\nimport { getTeamList } from './actions';\nimport { filteredTeamList } from './selectors';\nimport './list.scss';\n\nclass TeamList extends Component {\n  constructor(props) {\n    super(props);\n    props.getTeamList(props.listForDisplay);\n  }\n\n  render() {\n    if (this.props.error) {\n      return <p className=\"error\">{this.props.error}</p>\n    }\n\n    if (\n      !_.isEmpty(this.props.listForDisplay) &&\n      !this.props.loading\n    ) {\n      return (\n        <GridList\n          id=\"team-grid\"\n          cellHeight={100}\n          // TODO: number of columns should be dynamic based on screen width (e.g., 1 if xs or sm)\n          cols={3}\n          spacing={0}\n        >\n          {this.props.listForDisplay.map(team => (\n            // TODO: move this into a ListTile component\n            <GridListTile\n              key={team.id}\n              component={Link}\n              to={`/teams/${team.id}`}\n            >\n              <GridListTileBar\n                title={\n                  <Typography variant=\"h6\">\n                    <span>{team.fullName}\n                    </span>\n                  </Typography>\n                }\n                className=\"team-tile\"\n              />\n            </GridListTile>\n          ))}\n        </GridList>\n      );\n    }\n\n    return (\n      <Fragment>\n        Loading...\n      </Fragment>\n    );\n  }\n}\n\nexport default connect(\n  state => ({\n    listForDisplay: filteredTeamList(state),\n    error: state.teams.error,\n    loading: state.teams.loading,\n    searched: state.teams.searched,\n  }),\n  { getTeamList }\n)(TeamList);\n","import React, { Component, Fragment } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport TeamList from \"./list\";\n\nclass Teams extends Component {\n  render() {\n    return (\n      <Fragment>\n        <Grid item xs={12}>\n          <TeamList />\n        </Grid>\n      </Fragment>\n    );\n  }\n}\n\nexport default Teams;\n","import React, { Component, Fragment } from 'react';\nimport _ from 'lodash';\nimport { connect } from 'react-redux';\nimport Typography from '@material-ui/core/Typography';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport { Link } from \"react-router-dom\";\n\nimport { getTeamItem } from '../actions';\nimport { chosenTeamItem } from '../selectors';\nimport './index.scss';\n\nclass TeamItem extends Component {\n  constructor(props) {\n    super(props);\n\n    props.getTeamItem(props.match.params.id, props.teamList);\n  }\n\n  render() {\n    if (this.props.error) {\n      return <p className=\"error\">{this.props.error}</p>\n    }\n\n    if (\n      !_.isEmpty(this.props.itemForDisplay) &&\n      !this.props.loading\n    ) {\n      return (\n        <Fragment>\n          <Typography variant=\"h5\" color=\"inherit\">\n            {this.props.itemForDisplay.fullName} Roster\n          </Typography>\n          <Typography variant=\"body1\" color=\"inherit\"\n            component={Link}\n            to='/teams'>\n            Back to teams\n          </Typography>\n\n          <GridList\n            id=\"team-grid\"\n            cellHeight={100}\n            // TODO: number of columns should be dynamic based on screen width (e.g., 1 if xs or sm)\n            cols={3}\n            spacing={0}\n          >\n            {this.props.itemForDisplay.roster.map(player => (\n              // TODO: move this into a ListTile component\n              <GridListTile\n                key={player.person.displayName}\n                component={Link}\n                to={`${this.props.match.params.id}/${player.person.displayName}`}\n              >\n                <GridListTileBar\n                  title={\n                    <Typography variant=\"body2\">\n                      <span>{player.person.displayName}</span> - <span>{player.unit}</span>\n                      <br/>\n                      <span>{player.position}</span>\n                    </Typography>\n                  }\n                  subtitle={\n                    player.depthOrder === 1 ?\n                    <span>Starter</span>\n                    :\n                    <span>Backup</span>\n                  }\n                  className=\"player-tile\"\n                />\n              </GridListTile>\n            ))}\n          </GridList>\n        </Fragment>\n      );\n    }\n\n    return (\n      <Fragment>\n        Loading...\n      </Fragment>\n    );\n  }\n}\n\nexport default connect(\n  state => ({\n    teamList: state.teams.list,\n    itemForDisplay: chosenTeamItem(state),\n    error: state.teams.error,\n    loading: state.teams.loading,\n  }),\n  { getTeamItem }\n)(TeamItem);\n","import React, { Component } from 'react';\nimport _ from 'lodash';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Formik, Form } from 'formik';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport { FormikTextField, FormikSelectField  } from 'formik-material-fields';\nimport { Link } from \"react-router-dom\";\n\nimport { savePlayerItem } from '../actions';\n\nclass PlayerForm extends Component {\n  render() {\n    const {\n      teamItem,\n      playerItem,\n      teamId,\n    } = this.props;\n\n    return (\n      <Formik\n        initialValues={playerItem}\n        enableReinitialize={true}\n        onSubmit={(values, actions) => {\n          const playerIndex = _.findIndex(teamItem.roster, {person: {displayName: playerItem.person.displayName}});\n          this.props.savePlayerItem(teamId, playerIndex, values);\n          actions.setSubmitting(false);\n          this.props.history.push(`/teams/${teamId}`);\n        }}\n        render={({ errors, status, touched, isSubmitting }) => (\n          <Form>\n            <Grid container spacing={24}>\n              <Grid item md={4}>\n              </Grid>\n              <Grid item md={4}>\n                <FormikTextField\n                  name=\"person.displayName\"\n                  label=\"Display Name\"\n                  margin=\"normal\"\n                  fullWidth\n                  align=\"left\"\n                />\n                <br />\n                <FormikSelectField\n                  name=\"unit\"\n                  label=\"Unit\"\n                  margin=\"normal\"\n                  align=\"left\"\n                  fullWidth\n                  options={[\n                    { label: 'Offense', value: 'OFFENSE' },\n                    { label: 'Defense', value: 'DEFENSE' },\n                  ]}\n                />\n                <br />\n                <FormikSelectField\n                  name=\"position\"\n                  label=\"Position\"\n                  margin=\"normal\"\n                  align=\"left\"\n                  fullWidth\n                  options={[\n                    { label: \"Wide Receiver\", value: \"Wide Receiver\" },\n                    { label: \"Quarterback\", value: \"Quarterback\" },\n                    { label: \"Running Back\", value: \"Running Back\" },\n                    { label: \"Weakside Linebacker\", value: \"Weakside Linebacker\" },\n                    { label: \"Nose Tackle\", value: \"Nose Tackle\" },\n                    { label: \"Strong Safety\", value: \"Strong Safety\" },\n                    { label: \"Right Cornerback\", value: \"Right Cornerback\" },\n                    { label: \"Left Defensive End\", value: \"Left Defensive End\" },\n                    { label: \"Right Defensive End\", value: \"Right Defensive End\" },\n                  ]}\n                />\n                <br />\n                <FormikSelectField\n                  name=\"depthOrder\"\n                  label=\"Depth Order\"\n                  margin=\"normal\"\n                  align=\"left\"\n                  fullWidth\n                  options={[\n                    { label: 'Starter', value: 1 },\n                    { label: 'Backup', value: 2 },\n                  ]}\n                />\n                <br />\n                <Button\n                  type=\"submit\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                  disabled={isSubmitting}\n                >\n                  Submit\n                </Button>\n                &nbsp;\n                <Button\n                  type=\"button\"\n                  variant=\"contained\"\n                  color=\"default\"\n                  component={Link}\n                  to={`/teams/${teamId}`}\n                >\n                  Cancel\n                </Button>\n              </Grid>\n              <Grid item md={4}>\n              </Grid>\n            </Grid>\n          </Form>\n        )}\n      />\n    );\n  }\n}\n\nexport default withRouter(connect(\n  null,\n  { savePlayerItem }\n)(PlayerForm));\n","import React, { Component, Fragment } from 'react';\nimport _ from 'lodash';\nimport { connect } from 'react-redux';\nimport Typography from '@material-ui/core/Typography';\nimport { Link } from \"react-router-dom\";\n\nimport { getPlayerItem, savePlayerItem } from '../actions';\nimport { chosenPlayerItem, chosenTeamItem } from '../selectors';\nimport PlayerForm from './playerForm';\nimport './index.scss';\n\nclass PlayerItem extends Component {\n  constructor(props) {\n    super(props);\n    props.getPlayerItem(props.match.params.id, props.teamList, props.match.params.playerName);\n  }\n\n  render() {\n    if (this.props.error) {\n      return <p className=\"error\">{this.props.error}</p>\n    }\n\n    if (\n      !_.isEmpty(this.props.itemForDisplay) &&\n      !this.props.loading\n    ) {\n      return (\n        <Fragment>\n          <Typography variant=\"h5\" color=\"inherit\">\n            Edit {this.props.itemForDisplay.person.displayName}\n          </Typography>\n          <Typography variant=\"body1\" color=\"inherit\"\n            component={Link}\n            to={`/teams/${this.props.match.params.id}`}>\n            Back to team\n          </Typography>\n\n          <PlayerForm\n            teamItem={this.props.teamItem}\n            playerItem={this.props.itemForDisplay}\n            teamId={this.props.match.params.id}\n          />\n\n        </Fragment>\n      );\n    }\n\n    return (\n      <Fragment>\n        Loading...\n      </Fragment>\n    );\n  }\n}\n\nexport default connect(\n  state => ({\n    teamList: state.teams.list,\n    teamItem: chosenTeamItem(state),\n    itemForDisplay: chosenPlayerItem(state),\n  }),\n  { getPlayerItem, savePlayerItem }\n)(PlayerItem);\n","import React, { Component } from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport lightBlue from '@material-ui/core/colors/lightBlue';\nimport Grid from '@material-ui/core/Grid';\nimport './App.scss';\nimport Header from './components/header';\nimport TeamList from './containers/teams';\nimport TeamItem from './containers/teams/item';\nimport PlayerItem from './containers/teams/item/player';\n\nconst theme = createMuiTheme({\n  typography: {\n    useNextVariants: true,\n  },\n  palette: {\n    primary: lightBlue,\n  },\n});\n\nclass App extends Component {\n  render() {\n    return (\n      <MuiThemeProvider theme={theme}>\n        <div className=\"App\">\n          <Header className=\"App-header\"></Header>\n          <div className=\"Main\">\n            <Grid container spacing={0}>\n              <Grid item xs={12}>\n                <Switch>\n                  <Route path=\"/teams/:id/:playerName\" component={PlayerItem} />\n                  <Route path=\"/teams/:id\" component={TeamItem} />\n                  <Route path=\"/teams\" component={TeamList} />\n                  <Redirect to=\"/teams\" />\n                </Switch>\n              </Grid>\n            </Grid>\n          </div>\n        </div>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();\n","import _ from 'lodash';\n\nimport {\n  GET_TEAM_LIST,\n  GET_TEAM_LIST_SUCCESS,\n  GET_TEAM_LIST_FAIL,\n  GET_TEAM_ITEM,\n  GET_TEAM_ITEM_SUCCESS,\n  GET_TEAM_ITEM_FAIL,\n  GET_PLAYER_ITEM,\n  GET_PLAYER_ITEM_SUCCESS,\n  GET_PLAYER_ITEM_FAIL,\n  SAVE_PLAYER_ITEM,\n} from './actionTypes';\n\nconst list = [];\n\nconst initialState = {\n  list,\n  loading: false,\n  error: '',\n  filteredList: list,\n  chosenTeamItem: {},\n  chosenPlayerItem: {},\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_TEAM_LIST:\n      return {\n        ...state,\n        loading: true\n      };\n    case GET_TEAM_LIST_SUCCESS:\n      return {\n        ...state,\n        list: [ ...action.payload ],\n        loading: false,\n        error: '',\n      };\n    case GET_TEAM_LIST_FAIL:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload\n      };\n    \n    case GET_TEAM_ITEM:\n      return {\n        ...state,\n        loading: true\n      };\n    case GET_TEAM_ITEM_SUCCESS:\n      return {\n        ...state,\n        chosenTeamItem: action.payload,\n        loading: false,\n        error: '',\n      };\n    case GET_TEAM_ITEM_FAIL:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload\n      };\n\n    case GET_PLAYER_ITEM:\n      return {\n        ...state,\n        loading: true\n      };\n    case GET_PLAYER_ITEM_SUCCESS:\n      return {\n        ...state,\n        chosenPlayerItem: action.payload,\n        loading: false,\n        error: '',\n      };\n    case GET_PLAYER_ITEM_FAIL:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload\n      };\n    case SAVE_PLAYER_ITEM:\n      // TODO: handle scenario when user initially enters app at the edit player level (eg. via a bookmark)\n      if (state.list.length > 0) {\n        const teamIndex = _.findIndex(state.list, {id: action.payload.teamId});\n        return {\n          ...state,\n          loading: false,\n          error: '',\n          list: state.list.map((team, index) => {\n            if (index !== teamIndex) {\n              return team;\n            }\n\n            return {\n              ...team,\n              roster: team.roster.map((player, playerIndex) => {\n                if (playerIndex !== action.payload.playerIndex) {\n                  return player;\n                }\n\n                return {\n                  ...player,\n                  ...action.payload.playerDetails,\n                };\n              })\n            };\n          })\n        }\n      }\n\n      return {\n        ...state,\n        playerDetails: action.payload.playerDetails,\n        loading: false,\n        error: '',\n      };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport teams from \"../../containers/teams/reducer.js\";\n\nconst rootReducer = combineReducers({\n  teams,\n});\n\nexport default rootReducer;","import { put, call } from 'redux-saga/effects';\nimport axios from 'axios';\nimport _ from 'lodash';\n\nimport {\n  GET_TEAM_LIST_SUCCESS,\n  GET_TEAM_LIST_FAIL,\n  GET_TEAM_ITEM_SUCCESS,\n  GET_TEAM_ITEM_FAIL,\n  GET_PLAYER_ITEM_SUCCESS,\n  GET_PLAYER_ITEM_FAIL,\n} from './actionTypes';\n\nconst apiUrl = 'http://localhost:3000/api/';\n\nconst getListData = (teamList, filter) => {\n  let url = `${apiUrl}data.json`;\n\n  if (filter) {\n    url = `${url}?filter=${filter}`;\n  }\n\n  // fetch team list data only if it's not already in the store\n  if (teamList.length === 0) {\n    return axios.get(\n      url,\n    );\n  }\n\n  return new Promise((resolve) => {\n    return resolve({\n      data: {\n        teams: teamList\n      }\n    });\n  });\n};\n\nexport function* getList(data) {\n  try {\n    const response = yield call(getListData, data.payload);\n\n    if (response.data.teams.length) {\n      yield put({ type: GET_TEAM_LIST_SUCCESS, payload: response.data.teams });\n    }\n  } catch (e) {\n    yield put({ type: GET_TEAM_LIST_FAIL, payload: e });\n  }\n};\n\nexport function* getItem(data) {\n  try {\n    const response = yield call(getListData, data.payload.teamList, data.payload.id);\n\n    if (response.data.teams.length) {\n      const chosenTeamItem = _.find(response.data.teams, {id: data.payload.id});\n      // Sort players by position then depthOrder\n      chosenTeamItem.roster = _.orderBy(chosenTeamItem.roster, ['position', 'depthOrder'], ['asc', 'asc']);\n      yield put({ type: GET_TEAM_ITEM_SUCCESS, payload: chosenTeamItem });\n    }\n  } catch(e) {\n    yield put({ type: GET_TEAM_ITEM_FAIL, payload: e.message });\n  }\n};\n\nexport function* getPlayerItem(data) {\n  try {\n    const response = yield call(getListData, data.payload.teamList, `${data.payload.teamId}&playerName=${data.payload.playerName}`);\n\n    if (response.data.teams.length) {\n      const teamData = _.find(data.payload.teamList, {id: data.payload.teamId});\n      const foundPlayer = _.find(teamData.roster, {person: {displayName: data.payload.playerName}});\n      yield put({ type: GET_PLAYER_ITEM_SUCCESS, payload: foundPlayer });\n    }\n  } catch(e) {\n    yield put({ type: GET_PLAYER_ITEM_FAIL, payload: e.message });\n  }\n};\n","import { all, takeLatest } from \"redux-saga/effects\";\n\nimport {\n    GET_TEAM_LIST,\n    GET_TEAM_ITEM,\n    GET_PLAYER_ITEM,\n} from \"./actionTypes\";\n\nimport {\n    getList,\n    getItem,\n    getPlayerItem,\n} from \"./model\";\n\nexport default function* rootSaga() {\n    yield all([\n        takeLatest(GET_TEAM_LIST, getList),\n        takeLatest(GET_TEAM_ITEM, getItem),\n        takeLatest(GET_PLAYER_ITEM, getPlayerItem),\n    ]);\n};\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport reducers from \"./reducers\";\nimport createSagaMiddleware from \"redux-saga\";\n\nimport rootSaga from '../containers/teams/sagas';\n\nconst reduxDevTools =\n  // eslint-disable-next-line\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__() || compose;\n\nconst sagaMiddleware = createSagaMiddleware();\n\nlet store = createStore(\n  reducers,\n  compose(applyMiddleware(sagaMiddleware), reduxDevTools)\n);\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Router, Route } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport history from './history';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router history={history}>\n      <Route path=\"/\" component={App} />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}